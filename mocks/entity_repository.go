// Code generated by mockery v2.5.1. DO NOT EDIT.

package mocks

import (
	context "context"

	domain "github.com/evrone/go-service-template/internal/business-logic/domain"
	mock "github.com/stretchr/testify/mock"
)

// EntityRepository is an autogenerated mock type for the EntityRepository type
type EntityRepository struct {
	mock.Mock
}

// GetHistory provides a mock function with given fields: _a0
func (_m *EntityRepository) GetHistory(_a0 context.Context) ([]domain.Entity, error) {
	ret := _m.Called(_a0)

	var r0 []domain.Entity
	if rf, ok := ret.Get(0).(func(context.Context) []domain.Entity); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]domain.Entity)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Store provides a mock function with given fields: ctx, entity
func (_m *EntityRepository) Store(ctx context.Context, entity domain.Entity) error {
	ret := _m.Called(ctx, entity)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, domain.Entity) error); ok {
		r0 = rf(ctx, entity)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
